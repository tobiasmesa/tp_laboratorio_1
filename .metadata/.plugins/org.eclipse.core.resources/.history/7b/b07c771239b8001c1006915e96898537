/*
 ============================================================================
 Name        : TP_01.c
 Author      : Tobias Mesa
 Version     :
 Copyright   : Your copyright notice
 Description : TP-01
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include "operaciones.h"
#include "tp01_utilidades.h"


int main(){
	setbuf(stdout, NULL);
	int opcion;
	float kmIngresados = 0;
	float precioAerolineas = 0;
	float precioLatam = 0;
	float debitoAero = 0;
	float btcAero = 0;
	float pUnitarioAero = 0;
	float creditoAero = 0;

	int rtn;

	do
	{

		printf("\n--------------------------------\n");
		printf("1. Ingresar Kilometros. (KM = %.0f KM)\n", kmIngresados);
		printf("2. Ingresar Precio de Vuelos: (Aerolineas= $%.2f, Latam= $%.2f)\n", precioAerolineas, precioLatam);
		printf("3. Calcular todos los costos:\n");
		printf("4. Informar Resultados\n");
		printf("5. Carga forzada de datos\n");
		printf("6. Salir\n");
		printf("--------------------------------\n");
		getIntRange("\nIngrese una opcion: ", 3, 1, 6, "\nIngrese una opcion valida: ", &opcion);

		switch(opcion)
		{
			case 1:
				do {
				rtn = getFloatPositive(&kmIngresados, "\nIngresar Kilometros: ", "\nIngrese una cantidad valida: ", 3);
				} while (rtn != 0);
				break;
			case 2:
				precioVuelos(&precioAerolineas, &precioLatam);
				break;
			case 3:
				if(precioAerolineas != 0 && precioLatam != 0)
				{
					//void calcularCostos(float precio, float km, float *debito, float *credito, float *btc, float *pUnitario)
					calcularCostos(precioAerolineas, kmIngresados, &debitoAero, &creditoAero, &btcAero, &pUnitarioAero);
					//calcularCostos(precioAerolineas, kmIngresados, &debitoAero, &creditoAero, &btcAero, &pUnitarioAero);

				} else if(kmIngresados == 0)
				{
					system("cls");
					printf("\nLe falta cargar los km!");

				} else
				{
					system("cls");
					printf("\nLe falta cargar los precios de las aerolineas!!");

				}
				break;
			case 4:
				while(debitoAero != 0)
				{
					system("cls");
					mostrarCostos("\nAerolineas", precioAerolineas, debitoAero, creditoAero, btcAero, pUnitarioAero);

				}

				break;
			case 5:
				break;
			default:
				return 0;
		}

	} while(opcion != 6);


	return 0;
}


